#!/usr/bin/env perl

# concat_pyalign_textgrids - Concatenate phonetic label files of the type
# produced by pyalign.

# Authors: Ronald L. Sprouse (ronald@berkeley.edu)
# 
# Copyright (c) 2014, The Regents of the University of California
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
# 
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# 
# * Neither the name of the University of California nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Originally written in 2012.

my $Usage = "concat_pyalign_textgrids [--tier N] [--ofile file] infile1 infile2 [infileN...]\n\nconcat_pyalign_textgrids --help";

use strict;
use warnings;

use Getopt::Long;
use File::Basename;
use File::Spec;
use SoundLabel;

my $tier   = '';
my $outfile = '';
GetOptions(
            'help' => sub { print_help(); exit;},
            'tier=i' => \$tier,
            'ofile=s' => \$outfile,
          );

print(STDERR $Usage, "\n"), exit unless @ARGV;

my $type = 'praat';

# Get start and end times for each textgrid.
my @files = ();
foreach my $infile (@ARGV) {
  my $inlabel = SoundLabel->new($infile, $type);
  my $start;
  my $end;
  if (!$tier and $inlabel->num_tiers() > 1) {
    foreach my $tnum (1 .. $inlabel->num_tiers) {
      my $ts = $inlabel->tier_start($tnum, 'skipzero');
      $start = $ts if not defined $start or $ts < $start;
      my $te = $inlabel->tier_end($tnum);
      $end = $te if not defined $end or $te > $end;
    }
  }
  else {
    $start = $inlabel->tier_start($tier, 'skipzero');
    $end = $inlabel->tier_end($tier);
  }
  push @files, {
    filename => $infile,
    start => $start,
    end => $end
  };
}

# Sort textgrids chronologically. Make sure they are strictly ordered,
# with no overlap.
my @sorted_files = sort {$a->{start} <=> $b->{start}} @files;
my $prev;
foreach my $f (@sorted_files) {
  if (defined $prev) {
    die "$f->{filename} starts before $prev->{filename} end. Can't process. Exiting.\n" if $prev->{end} > $f->{start};
  }
  $prev = $f;
}

# Concatenate the sorted textgrids. (This could be combined with the
# preceding loop.)
my $first = shift @sorted_files;
my $result = SoundLabel->new($first->{filename}, $type);
my @tiers = $tier || 1 .. $result->num_tiers();
foreach my $next (@sorted_files) {
  my $add = SoundLabel->new($next->{filename}, $type);
  foreach my $tnum (@tiers) {
      # First interval is always 'sp', so we can just let it fill up the
      # space from the previous label file.
      push @{$result->{$tnum}}, @{$add->{$tnum}};
  }
}

my $resultstr = $result->stringify_as('praat_short', @tiers);
# Expedient hack for pyalign output, which has predictable tier names.
$resultstr =~ s/"Tier1"/"phone"/m;
$resultstr =~ s/"Tier2"/"word"/m;
if ($outfile) {
  my $out;
  open($out,">$outfile") or die "Can't open output file $outfile: $!";
  print $out $resultstr;
  close($out);
}
else {
  print STDOUT $resultstr;
}

sub print_help {
  print <<EOF;
concat_pyalign_textgrids: Concatenate textgrids of the type output by pyalign.

USAGE

$Usage


ARGUMENTS

  --help
    Print this message and quit.

  --tier N
    Specify which tier to concatenate and output. Default to all (both) tiers.

  --ofile filename
    Print to an output file. If not provided, print to STDOUT.

  infile [infileN...]
    A list of input label files to be concatenated.


EXAMPLES

  * Concatenate all textgrids in a directory and print to STDOUT:

    concat_pyalign_textgrids *.TextGrid

  * Concatenate all textgrids in a directory and print to big.TextGrid:

    concat_pyalign_textgrids --ofile big.TextGrid *.TextGrid


EOF
;

}

